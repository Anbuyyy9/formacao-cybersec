#!/bin/bash

# =============================================================================
# Script de Configura√ß√£o R√°pida: Setup Automatizado do Laborat√≥rio
# Laborat√≥rio de Defesa e Monitoramento - M√≥dulo 2
# =============================================================================

echo "‚ö° Configura√ß√£o R√°pida - Setup Automatizado"
echo "==========================================="

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir com cores
print_status() {
    local status=$1
    local message=$2
    
    case $status in
        "SUCCESS")
            echo -e "${GREEN}‚úÖ $message${NC}"
            ;;
        "INFO")
            echo -e "${BLUE}‚ÑπÔ∏è  $message${NC}"
            ;;
        "WARN")
            echo -e "${YELLOW}‚ö†Ô∏è  $message${NC}"
            ;;
    esac
}

# Fun√ß√£o para verificar se est√° rodando como root
check_root() {
    if [ "$EUID" -ne 0 ]; then
        echo "‚ùå Este script deve ser executado como root"
        echo "Use: sudo $0"
        exit 1
    fi
}

# Fun√ß√£o para iniciar servi√ßos essenciais
start_essential_services() {
    print_status "INFO" "Iniciando servi√ßos essenciais..."
    
    # Iniciar SSH se n√£o estiver rodando
    if ! service ssh status >/dev/null 2>&1; then
        print_status "INFO" "Iniciando SSH..."
        service ssh start
        print_status "SUCCESS" "SSH iniciado com sucesso"
    else
        print_status "SUCCESS" "SSH j√° est√° rodando"
    fi
    
    # Verificar se iptables est√° dispon√≠vel
    if ! command -v iptables >/dev/null 2>&1; then
        print_status "WARN" "iptables n√£o est√° instalado. Instalando..."
        apt-get update && apt-get install -y iptables
        print_status "SUCCESS" "iptables instalado"
    else
        print_status "SUCCESS" "iptables j√° est√° instalado"
    fi
}

# Fun√ß√£o para aplicar configura√ß√£o b√°sica de firewall
apply_basic_firewall() {
    print_status "INFO" "Aplicando configura√ß√£o b√°sica de firewall..."
    
    # Limpar regras existentes
    iptables -F
    iptables -X
    iptables -t nat -F
    iptables -t nat -X
    iptables -t mangle -F
    iptables -t mangle -X
    
    # Definir pol√≠tica padr√£o
    iptables -P INPUT DROP
    iptables -P FORWARD DROP
    iptables -P OUTPUT ACCEPT
    
    # Permitir conex√µes estabelecidas
    iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    
    # Permitir tr√°fego local
    iptables -A INPUT -i lo -j ACCEPT
    
    # Permitir HTTP
    iptables -A INPUT -p tcp --dport 80 -j ACCEPT
    
    # Bloquear SSH do Kali
    iptables -A INPUT -s 192.168.100.11 -p tcp --dport 22 -j DROP
    
    # Permitir SSH de outros IPs
    iptables -A INPUT -p tcp --dport 22 -j ACCEPT
    
    # Adicionar logging
    iptables -A INPUT -s 192.168.100.11 -j LOG --log-prefix "BLOCKED_KALI: "
    
    print_status "SUCCESS" "Configura√ß√£o b√°sica de firewall aplicada"
}

# Fun√ß√£o para salvar configura√ß√µes
save_configurations() {
    print_status "INFO" "Salvando configura√ß√µes..."
    
    # Criar diret√≥rio para iptables se n√£o existir
    mkdir -p /etc/iptables
    
    # Salvar regras de iptables
    iptables-save > /etc/iptables/rules.v4
    
    print_status "SUCCESS" "Configura√ß√µes salvas em /etc/iptables/rules.v4"
}

# Fun√ß√£o para testar configura√ß√£o
test_configuration() {
    print_status "INFO" "Testando configura√ß√£o..."
    
    echo ""
    echo "üìã Regras de firewall aplicadas:"
    echo "================================"
    iptables -L INPUT --line-numbers
    
    echo ""
    echo "üåê Testando conectividade:"
    echo "=========================="
    
    # Testar ping para o Kali
    if ping -c 1 192.168.100.11 >/dev/null 2>&1; then
        print_status "SUCCESS" "Ping para Kali: FUNCIONANDO"
    else
        print_status "WARN" "Ping para Kali: FALHOU"
    fi
    
    # Verificar se SSH est√° rodando
    if netstat -tuln | grep -q ":22 "; then
        print_status "SUCCESS" "SSH est√° rodando na porta 22"
    else
        print_status "WARN" "SSH n√£o est√° rodando na porta 22"
    fi
}

# Fun√ß√£o para mostrar pr√≥ximos passos
show_next_steps() {
    echo ""
    echo "üéØ Pr√≥ximos Passos"
    echo "=================="
    echo ""
    echo "1. Teste a conectividade SSH do Kali:"
    echo "   docker exec -it kali_lab_19 ssh root@192.168.100.10"
    echo ""
    echo "2. Verifique os logs de firewall:"
    echo "   tail -f /var/log/syslog | grep BLOCKED_KALI"
    echo ""
    echo "3. Execute testes completos:"
    echo "   ./scripts/test-firewall.sh all"
    echo ""
    echo "4. Acesse a interface gr√°fica:"
    echo "   Navegador: http://localhost:6080"
    echo "   VNC: localhost:5901 (senha: kenseilab)"
    echo ""
    echo "5. Para mais op√ß√µes de firewall:"
    echo "   /opt/lab-scripts/iptables-example.sh help"
}

# Fun√ß√£o para configura√ß√£o completa
full_setup() {
    print_status "INFO" "Iniciando configura√ß√£o completa..."
    
    check_root
    start_essential_services
    apply_basic_firewall
    save_configurations
    test_configuration
    show_next_steps
    
    print_status "SUCCESS" "Configura√ß√£o r√°pida conclu√≠da!"
}

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo "Uso: $0 [op√ß√£o]"
    echo ""
    echo "Op√ß√µes:"
    echo "  setup     - Configura√ß√£o completa (padr√£o)"
    echo "  services  - Iniciar apenas servi√ßos essenciais"
    echo "  firewall  - Aplicar apenas configura√ß√£o de firewall"
    echo "  test      - Testar configura√ß√£o atual"
    echo "  help      - Mostrar esta ajuda"
    echo ""
    echo "Exemplo:"
    echo "  $0 setup    # Configura√ß√£o completa"
    echo "  $0 firewall # Apenas firewall"
}

# Fun√ß√£o principal
main() {
    case "${1:-setup}" in
        "setup")
            full_setup
            ;;
        "services")
            check_root
            start_essential_services
            ;;
        "firewall")
            check_root
            apply_basic_firewall
            save_configurations
            ;;
        "test")
            test_configuration
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            echo "‚ùå Op√ß√£o inv√°lida: $1"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# Executar fun√ß√£o principal
main "$@"
